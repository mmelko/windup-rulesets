<?xml version="1.0"?>
<ruletest id="component-changes-tests"
        xmlns="http://windup.jboss.org/schema/jboss-ruleset"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <testDataPath>data/component-changes</testDataPath>
    <rulePath>../component-changes.windup.groovy</rulePath>

    <ruleset>
        <rules>
            <rule id="component-changes-00001-test">
                <when>
                    <not>
                        <iterable-filter size="2">
                            <hint-exists message="Authorization token was moved from uri-path '*."/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="[camel-telegram] 'Authorization Token required' hint was not found!" />
                </perform>
            </rule>
            <rule id="component-changes-00002-test">
                <when>
                    <not>
                        <iterable-filter size="4">
                            <hint-exists message="It's mandatory to specify key/passphrase for `ShiroSecurityPolicy`"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="[camel-shiro] 'Shiro needs to have passphrase specified - hint not found!" />
                </perform>
            </rule>
            <rule id="component-changes-00003-test">
                <when>
                    <not>
                        <iterable-filter size="3">
                            <hint-exists message="`.*` has been removed from the mock component's assertion api."/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="[camel-mock] outBody removed hint not found!" />
                </perform>
            </rule>
         <rule id="component-changes-00004-test">
                <when>
                    <not>
                        <iterable-filter size="2">
                            <hint-exists message="`@OutHeaders` annotation has been removed. Use `@Headers*`"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="@OutHeaders annotation removed hint not found!" />
                </perform>
            </rule>
            <rule id="component-changes-00005-test">
                <when>
                    <not>
                        <iterable-filter size="6">
                            <hint-exists message="`.*` has been removed from simple language"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="[Simple language] outBody/outHeaders removed hint not found!" />
                </perform>
            </rule>
            <rule id="component-changes-00006-test">
                <when>
                    <not>
                        <iterable-filter size="6">
                            <hint-exists message="`.*` has been removed from simple language"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="[Simple language] outBody/outHeaders removed hint not found!" />
                </perform>
            </rule>
        <rule id="component-changes-00007-test">
                <when>
                    <not>
                        <iterable-filter size="6">
                            <hint-exists message="`.*` has been removed from simple language"/>
                        </iterable-filter>
                    </not>
                </when>
                <perform>
                    <fail message="[Simple language] outBody/outHeaders removed hint not found!"/>
                </perform>
            </rule>
        </rules>
    </ruleset>
</ruletest>
